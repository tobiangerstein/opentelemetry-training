FROM debian:bookworm-slim

RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		ca-certificates \
		iptables \
		openssl \
		pigz \
		xz-utils \
	; \
	rm -rf /var/lib/apt/lists/*

ENV DOCKER_TLS_CERTDIR=/certs
RUN mkdir /certs /certs/client && chmod 1777 /certs /certs/client

COPY --from=docker:26-dind /usr/local/bin/ /usr/local/bin/
# COPY --from=docker:26-dind /usr/local/libexec/docker/cli-plugins /usr/local/libexec/docker/cli-plugins


RUN \
    apt-get update \
    apt-get install ca-certificates curl \
    install -m 0755 -d /etc/apt/keyrings \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc \
    chmod a+r /etc/apt/keyrings/docker.asc \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

RUN apt-get -qq update

RUN apt-get -qq install -y --no-install-recommends \
    docker-buildx-plugin \
    docker-compose-plugin \
    sudo \
    bash \
    curl \
    gradle \
    maven \
    python3 \
    python-is-python3 \
    pip \
    python3-setuptools \
    python3-wheel \
    python3-psutil \
    python3-requests

RUN rm /usr/lib/python3.11/EXTERNALLY-MANAGED

RUN pip install \
    flask \
    Faker \
    opentelemetry-api \
    opentelemetry-sdk \
    opentelemetry-exporter-prometheus \
    opentelemetry-exporter-otlp \
    opentelemetry-instrumentation-flask

WORKDIR /workspaces/opentelemetry-training

EXPOSE 5000

VOLUME /var/lib/docker

ENTRYPOINT ["dockerd-entrypoint.sh"]
CMD []
